\RequirePackage{graphicx}
\RequirePackage{amsmath,amssymb}
\RequirePackage{array}
\DeclareSymbolFont{mysymbols}{OMS}{cmsy}{m}{n}
\SetSymbolFont{mysymbols}{bold}{OMS}{cmsy}{b}{n}
\DeclareMathSymbol{\myRightarrow}{\mathrel}{symbols}{"29}
\let\Rightarrow\myRightarrow

%-------------------------------------------------------------------%
%   Making the speaker margin 16:9 and 4:3 switch work              %
%-------------------------------------------------------------------%

% Define a toggle to compile slides with or without margin
% - if nospeakermargin.tex exists in directory where slides are compiled,
%   the "old" 4:3 slide layout is used. Makefiles can and do
%   create and remove an empty file of that name to control this.
% - if the file does not exist slides are compiled with margin in 16:9 by default
\newif\if@speakermargin
\IfFileExists{nospeakermargin.tex}{\@speakermarginfalse}{\@speakermargintrue}

\RequirePackage{calc}
% original: paperwidth: 128mm x 96mm
% --> set 'speakerwidth' to 42.6666666667mm to get identical slides

% Define lengths. slidewidth is used in both if-arms
\newlength{\speakerwidth}
\newlength{\logooffset}
\newlength{\slidewidth}

\if@speakermargin
  % If the file exists -> add margin (16:9)
  \geometry{paperwidth=170.6666666667mm,paperheight=96mm}

  \setlength{\logooffset}{2mm}
  \setlength{\speakerwidth}{42.6666666667mm}  % slide is 4:3
  %\setlength{\speakerwidth}{34mm}  % 20% speaker
  \setlength{\slidewidth}{\paperwidth-\speakerwidth}

  % "i2ml" text color (taken from dark logo color)
  \definecolor{logoblue}{HTML}{4D88FF}
  %\definecolor{marginbg}{HTML}{FFFAF8}  % slightly tinted margin
  %\definecolor{marginbg}{HTML}{F8F8F8}  % grey margin
  \definecolor{marginbg}{HTML}{FFFFFF}  % white margin

  \setbeamertemplate{background}{%
    \begin{tikzpicture}[overlay,remember picture]
      \path [fill=marginbg] (\slidewidth,0) rectangle (\paperwidth,-\paperheight);

      \node[anchor=north,text width=0.8\speakerwidth,align=center,text=logoblue,font=\Huge] at ([shift={(-\speakerwidth/2,-\logooffset)}]current page.north east) {

        %\vspace{3mm}
        \includegraphics[width=0.6\speakerwidth]{../../style/logo.pdf}\\
        %  \phantom{x}I2ML\\
      };
    \end{tikzpicture}%
  }
\else
  % If the file does exist -> old 4:3 layout, no margin
  \geometry{paperwidth=128mm,paperheight=96mm}
  \setlength{\slidewidth}{\paperwidth}
  \setbeamersize{text margin left=0.8cm,text margin right=0.8cm}
\fi

\newenvironment{rightbox}[1]
{\itemize[
    nosep,
    leftmargin=\dimexpr\textwidth-#1\relax,
    rightmargin=0pt,
    itemindent=\parindent,
    listparindent=\parindent,
  ]\item[]\relax}
{\enditemize}

%-------------------------------------------------------------------%
%   BeginLecture // Title slide                                     %
%-------------------------------------------------------------------%

% Wrapper to insert title figure within a column env
% Only needed because column is placed in an if/else arm
% which is not allowed otherwise (I might be wrong)
\newcommand{\includeGraphicsColumn}[1]{%
  \begin{column}{.45\textwidth}
    \begin{figure}[!b]
      \includegraphics[width=0.9\textwidth, keepaspectratio]{#1}
      \ifcsname titlecaption\endcsname
        \caption*{\titlecaption}
      \fi
    \end{figure}
  \end{column}%
}

% Similar wrapper to insert learning goals
\newcommand{\includeLearningGoalsColumn}[1]{%
  \begin{column}{.55\textwidth}
    % Uncomment for visual debugging of columns with red line
    % \color{blue}\rule{\linewidth}{4pt}
    % \vfill % No vfill needed if columns are vertically centered
    {\normalsize\bfseries Learning goals}
    \normalfont
    \begin{itemize}
      \small
      #1
    \end{itemize}
  \end{column}%
}

% Needed for trimming whitespace around \titlemeta arguments
% Seemingly least bad option. See also 
% https://tex.stackexchange.com/questions/484288/command-for-nulifying-spaces-string-trim-in-latex
\RequirePackage{trimspaces}
\newcommand{\trim}[1] {\trim@spaces@noexp{#1}}

% Main title slide wrapper, includes
% Automatically uses \title{} element to insert lecture title
% Example title on slide: 
%   CART
%   Advantages \& Disadvantages
% -------------------------------
% - Argument 1: Chunk title, e.g. CART
% - Argument 2: Chapter title, e.g. Advantages \& Disadvantages
% - Argument 3: Relative path to title figure, can be empty, e.g.: figure/cart_dis_1
% - Argument 4: \item elements for learning goals.
\newcommand{\titlemeta}[4]{%

  % If chunk title (arg 1) is empty, we just use the lecture title
  \if\relax\detokenize{#1}\relax
    % Use lecture title only
    \lecturechapter{#2}
  \else%
    % Otherwise append chunk title and lecture title separated by newline
    % Trim whitespaces from chunk name to avoid superflusous spaces
    \lecturechapter{\trim{#1}\\#2}
  \fi

  % Setting title requires use of \title{} command before \begin{document},
  % sets the title of the lecture as in "Introduction to Machine Learning"  
  \lecture{\inserttitle}

  \begin{frame}[noframenumbering,plain]
    \vspace*{1cm}
    {\LARGE\bfseries\inserttitle}
    \vspace*{0.5cm}

    % Insert section title defined via \lecturechapter (??)
    % \par ensures that spacing is ok when linebreak happens
    \if\lecturesection\@empty\relax\else%
      {\LARGE\bfseries\lecturesection\par}%
    \fi%

    \vfill

    % Using columns env to put things side-by-side rather than minipage
    % see https://latex-beamer.com/tutorials/columns/
    \begin{columns}[c] % align columns (c)enter or (T)op
      % if checks if argument (detokenized?) is empty, i.e. equal to \relax
      \if\relax\detokenize{#3}\relax\else%
        % column env is wrapped in separate command because
        % envs aren't allowed directly within if-else arms apparently
        % Idea is to have learning goals horizontally centered if no figure is used
        \includeGraphicsColumn{#3}
      \fi

      \if\relax\detokenize{#4}\relax\else%
        % Same idea with learning goals column
        \includeLearningGoalsColumn{#4}
      \fi
    \end{columns}%
  \end{frame}
}

% Workarounds for slide numbering
% \AtBeginLecture is provided by the beamer class
% Contents placed at beginning of document
\AtBeginLecture{%
  % Decrement counter, so slide 1 is after the title slide 
  \global\advance\c@lecture by -1
  % Writing counter to aux file and console
  % Presumably useful when combining multiple slides to one large tex file to ensure numbering is correct
  \immediate\write\@auxout {\string \newlabel{lect:@@\thelecture}{{\insertframenumber}}}%
  \typeout{[LECTURE]=[\thelecture][\insertlecture][\thepage][\theframenumber]}%
  \usebackgroundtemplate{}
}

% Define \endlecture command to be placed just before \end{document}
% Sets counter to current frame number
% Can't find out what \addjustlectureframenumber is (aside the obvious?)
% But it's called with the lecture number retrieved from the .aux file?
% Also writes lecture label console again
\def\endlecture{%
  \setcounter{lectureframenumber}{\insertframenumber}%
  \expandafter\addjustlectureframenumber\csname r@lect:@@\thelecture\endcsname%
  \immediate\write\@auxout {\string \newlabel{endlect:@@\thelecture}{{\thelectureframenumber}}}%
}

% Not sure why this is needed?
\newcommand{\lecturechapter}[1]{%
  \gdef\lecturesection{#1}
}
\lecturechapter{0}{}

%-------------------------------------------------------------------%
%   Section title                                                   %
%-------------------------------------------------------------------%

% we start with section 0 (instead of default 1)
\setcounter{section}{0}

% Not sure if sections are used?
\AtBeginSection[]{%
  \begin{frame}
    \begin{center}
      \usebeamercolor[fg]{structure}
      \vspace*{\stretch{1}}
      {\fontsize{16}{20}\bfseries\selectfont\insertsection}\\[0.1cm]
      \vspace*{\stretch{2}}
    \end{center}
  \end{frame}
}

% hyperref settings
\hypersetup{%
  colorlinks = {false}
  % FIXME: hyperref complains in logs about these macro not being allowed here?
  % Likely because \author{} is usually commented out
  % pdfauthor = {\insertshortauthor},
  % pdfsubject = {\insertshorttitle},
}

% ------------------------------------------------------------------------
% Use bold font for Titles etc.
\usefonttheme{structurebold}

% ------------------------------------------------------------------------
% footline
\setbeamerfont{footline}{size=\tiny,parent=normal text}

%-------------------------------------------------------------------%
%   Fonts and colors                                                %
%-------------------------------------------------------------------%

\RequirePackage[T1]{fontenc}
\RequirePackage[scaled=0.92]{helvet}   %% Helvetica for sans serif

\setbeamercolor*{structure}{fg=black,bg=white}
\setbeamercolor*{alerted text}{parent=structure}
\setbeamercolor*{titlelike}{parent=structure}

\setbeamercolor*{author in head/foot}{parent=normal text}
\setbeamercolor*{title in head/foot}{parent=normal text}
\setbeamercolor*{section in head/foot}{parent=normal text}
\setbeamercolor*{framenumber in head/foot}{parent=normal text}

% ------------------------------------------------------------------------
% \mode<presentation>
% ------------------------------------------------------------------------
% Lists
\setbeamertemplate{items}[ball]
\setbeamerfont{itemize/enumerate subbody}{size=\normalsize}
\setbeamerfont{itemize/enumerate subsubbody}{size=\normalsize}

%-------------------------------------------------------------------%
%   Frame title: lecture                                            %
%-------------------------------------------------------------------%

\defbeamertemplate*{frametitle}{lecture}[1][left]
{
  \ifbeamercolorempty[bg]{frametitle}{}{\nointerlineskip}%
  \@tempdima=\textwidth%
  \advance\@tempdima by\beamer@leftmargin%
  \advance\@tempdima by\beamer@rightmargin%
  \begin{beamercolorbox}[sep=0.2cm,#1,wd=\the\@tempdima]{frametitle}
    \if@tempswa\else\csname beamer@fte#1\endcsname\fi%
    {\usebeamerfont{frametitle}\rule[-0.5ex]{0pt}{2.3ex}\insertframetitle\par}%
    \if@tempswa\else\vskip-.2cm\fi% set inside beamercolorbox... evil here...
  \end{beamercolorbox}%
}

\def\beamer@fteright{\vskip0.35cm\advance\leftskip by 1.7cm\advance\rightskip by1.7cm}

\setbeamertemplate{frametitle continuation}[from second][{\small/~\insertcontinuationcount}]

\setbeamertemplate{frametitle}{\expandafter\uppercase\expandafter\insertframetitle}

% ------------------------------------------------------------------------
% Geometry
%\setbeamersize{text margin left=0.8cm,text margin right=0.8cm}
%\setbeamersize{text margin left=0.8cm,text margin right=\dimexpr0.8cm+\speakerwidth\relax}
\setbeamersize{text margin left=0.8cm,text margin right=0.8cm,sidebar width right=\speakerwidth}

%-------------------------------------------------------------------%
%   Slide footer                                                    %
%-------------------------------------------------------------------%

\pgfdeclarehorizontalshading{footlineshade}{4mm}{%
  color(0pt)=(black);%
  color(1.0\slidewidth)=(structure!50!black)}

% \@setref sometimes (depending on version) calls \@firstoftwo#1\@empty\@empty\@empty\null, sometimes \@firstoftwo#1\null
% in the former case, we would prefer to use \@firstoffive
% We therefore define a macro that returns its first argument and drops all tokens until it finds '\null'.
\long\def\@eatnull#1#2\null{#1}

% redefine \ref (it has been redefined somewhere by the beamerclass)
\def\lectureref#1{\expandafter\@setref\csname r@#1\endcsname\@eatnull{#1}}

% counter for framenumber for current lecture
\newcounter{lectureframenumber}

% adjust framenumbers for lecture (check whether reference is already defined)
\def\addjustlectureframenumber#1{\ifx#1\relax\else%
    \addtocounter{lectureframenumber}{-\lectureref{lect:@@\thelecture}}\fi}
\defbeamertemplate*{footline}{lecture theme}
{
\usebeamerfont{footline} %author in head/foot}
\setcounter{lectureframenumber}{\insertframenumber}%
\ifnum\c@lecture<0\else \expandafter\addjustlectureframenumber\csname r@lect:@@\thelecture\endcsname\fi%
\leavevmode%
\hbox{%
\setbox\beamer@linebox=\hbox to\slidewidth{%
\hskip 1em%
  {\usebeamercolor[fg]{author in head/foot}%
    % FIXME: If date and author are kept empty anyway, why not remove this?
    % \insertshortauthor~~\copyright~~\insertshortdate}\hfill%
    ~~\copyright~~}\hfill%
{\usebeamercolor[fg]{title in head/foot}%
  \inserttitle~~--~~}%
\ifnum\c@lecture>0%
  {\usebeamercolor[fg]{section in head/foot}%
  \arabic{lecture}~~--~~}%
\fi%
{\usebeamercolor[fg]{framenumber in head/foot}%
\thelectureframenumber~/~%
\ifnum\c@lecture<0 \inserttotalframenumber\else\lectureref{endlect:@@\thelecture}\fi%
}%
\hskip 1em}%
\ht\beamer@linebox=2.5mm%
\dp\beamer@linebox=0pt%
\setbox\beamer@linebox=\vbox{\box\beamer@linebox\vskip1.125ex}%
\rule[4.5mm]{\slidewidth}{0.5pt}%
%%
\hskip-\slidewidth%
\hbox{\box\beamer@linebox\hfill}}
}

% ------------------------------------------------------------------------
% Navigation symbols
\setbeamertemplate{navigation symbols}{}

% ------------------------------------------------------------------------
% No head lines
\defbeamertemplate*{headline}{lecture theme}{}

%-------------------------------------------------------------------%
%   Citebutton (superseded by \citelink defined in preamble.tex)    %
%-------------------------------------------------------------------%

% This version is superseded and \citelink will likely be defined here once widely adopted
% Example usage (from slides-cart-discussion.tex)
% \citebutton{Breiman, 1984}{https://www.taylorfrancis.com/books/mono/10.1201/9781315139470/classification-regression-trees-leo-breiman}
\newcommand{\citebutton}[2]{%
  \NoCaseChange{\resizebox{!}{9pt}{\protect\beamergotobutton{\href{#2}{#1}}}}%
}


%-------------------------------------------------------------------%
%   Environments                                                    %
%-------------------------------------------------------------------%

% Frame with breaks and verbatim // this is used very often
% Should not use 'containsverbatim', see https://tex.stackexchange.com/questions/69191/can-a-beamer-frame-have-both-containsverbatim-and-hidden-shown-block-options
% Should use 'fragile' instead, but everything breaks if fragile is used all the time
% See https://tug.ctan.org/macros/latex/contrib/beamer/doc/beameruserguide.pdf for details
\newenvironment{vbframe}
{
  \begin{frame}[containsverbatim,allowframebreaks]
    }
    {
  \end{frame}
}

% Frame with verbatim without breaks (to avoid numbering one slided frames)
% This is not used anywhere but I can see it being useful
\newenvironment{vframe}
{
  \begin{frame}[containsverbatim]
    }
    {
  \end{frame}
}

% Itemize block
\newenvironment{blocki}[1]
{
  \begin{block}{#1}\begin{itemize}
      }
      {
    \end{itemize}\end{block}
}


% ------------------------------------------------------------------------
%    Layout macros                                                       %
% ------------------------------------------------------------------------

% Two columns side-by-side (horizontal layout))

% Right column takes remaining space
% \splitV[0.4]{0}{Left content}{Right content}
% Explicit widths for both columns
% \splitV[0.4]{0.4}{Left content}{Right content}
% !! Note that \twocolumn as a name can not be used due to conflicts!
\newcommand{\splitV}[3][0.5]{%
  \begin{columns}[T,totalwidth=\textwidth]%
    \begin{column}{#1\textwidth}% Left column with specified width
      #2
    \end{column}%
    \begin{column}{\dimexpr\textwidth-#1\textwidth\relax}% Right column taking remaining space
      #3
    \end{column}%
  \end{columns}
  \vspace{-1em}
}

\newcommand{\splitVCentered}[3][0.5]{%
  \begin{columns}[c,totalwidth=\textwidth]% Align columns with each other
    \begin{column}{#1\textwidth}% Left column
      \vbox to 0.8\textheight{\vfill% Create vertically centered box
        \centering% Horizontally center content too
        #2
        \vfill}% 
    \end{column}%
    \begin{column}{%
        \dimexpr\textwidth-#1\textwidth\relax% Take remaining space
      }%
      \vbox to 0.8\textheight{\vfill% Create vertically centered box
        \centering% Horizontally center content too
        #3
        \vfill}%
    \end{column}%
  \end{columns}
  \vspace{-1em}
}

% Version with no margins that only takes up the width specified
% \splitV{0.4}{0.4}{Left content}{Right content}
\newcommand{\splitVCompact}[4]{%
  % Create two minipages side by side with the exact width specified
  \noindent% Start at left margin
  \begin{minipage}{#1\textwidth}
    #3
  \end{minipage}%
  \hspace{1em}
  \begin{minipage}{#2\textwidth}
    #4
  \end{minipage}
  \vspace{-1em}
}

% Full-size quadrant layout
% Uses compact version of splitVCentered to align content correctly
% Quadrant order is 
% 1 2
% 3 4
% \quadrant{Top left}{Top right}{Bottom left}{Bottom right}
\newcommand{\twobytwo}[4]{%
  \vspace{-0.5em}% Remove top margin
  \begin{columns}[c,totalwidth=\textwidth]% Top row
    \begin{column}{0.5\textwidth}% Top-left cell
      \vbox to 0.4\textheight{\vfill% Create vertically centered box (half height)
        \centering% Horizontally center content
        #1
        \vfill}% 
    \end{column}%
    \begin{column}{0.5\textwidth}% Top-right cell
      \vbox to 0.4\textheight{\vfill% Create vertically centered box (half height)
        \centering% Horizontally center content
        #2
        \vfill}%
    \end{column}%
  \end{columns}
  \vspace{-1em}% Reduce space between rows
  \begin{columns}[c,totalwidth=\textwidth]% Bottom row
    \begin{column}{0.5\textwidth}% Bottom-left cell
      \vbox to 0.4\textheight{\vfill% Create vertically centered box (half height)
        \centering% Horizontally center content
        #3
        \vfill}% 
    \end{column}%
    \begin{column}{0.5\textwidth}% Bottom-right cell
      \vbox to 0.4\textheight{\vfill% Create vertically centered box (half height)
        \centering% Horizontally center content
        #4
        \vfill}%
    \end{column}%
  \end{columns}
  \vspace{-0.5em}% Remove bottom margin
}

% splitVthree for 3-column layout
% Simple version with equal width columns
% Usage: \splitVThree{content1}{content2}{content3}
\newcommand{\splitVThree}[3]{%
  % Simplified version that only takes 3 content arguments
  % All columns are equal width (1/3 of textwidth)
  \begin{columns}[T,totalwidth=\textwidth]%
    \begin{column}{0.33\textwidth}% First column
      #1
    \end{column}%
    \begin{column}{0.33\textwidth}% Second column
      #2
    \end{column}%
    \begin{column}{0.33\textwidth}% Third column
      #3
    \end{column}%
  \end{columns}%
  \vspace{-1em}%
}


% Full version with customizable widths
% Width of thrid columns is inferred from first two if omitted
% Usage: \splitVThreeCustom[col1width]{col2width}{col3width}{content1}{content2}{content3}
\newcommand{\splitVThreeCustom}[6][0.33]{%

  % Handle the second width parameter
  \ifdim#2pt=0pt
    \def\secondcolwidth{0.33}% Default if set to 0
  \else
    \def\secondcolwidth{#2}% Use provided width
  \fi

  % Handle the third width parameter
  \ifdim#3pt=0pt
    % Calculate remaining space
    \def\thirdcolwidth{\dimexpr 1\textwidth-#1\textwidth-\secondcolwidth\textwidth\relax}%
  \else
    % Use provided width
    \def\thirdcolwidth{#3\textwidth}%
  \fi

  % Set up the columns
  \begin{columns}[T,totalwidth=\textwidth]%
    \begin{column}{#1\textwidth}% First column
      #4
    \end{column}%
    \begin{column}{\secondcolwidth\textwidth}% Second column
      #5
    \end{column}%
    \begin{column}{\thirdcolwidth}% Third column (already includes \textwidth)
      #6
    \end{column}%
  \end{columns}%
  \vspace{-1em}%
}


% ------------------------------------------------------------------------
% List helpers for itemize
% ------------------------------------------------------------------------

% Stretching itemize wrapper that fills vertical space
% Note that this might break if enumitem is used instead of enumerate
% See also https://github.com/slds-lmu/teaching_devops_issues/issues/20
\newenvironment{itemizefill}{%
  \begin{itemize}%
    \vspace{0pt}%
    \setlength{\itemsep}{\fill}%
    \setlength{\parsep}{0pt}%
    }{%
    \vspace{0pt}%
  \end{itemize}%
}

\newenvironment{itemizeS}{%
  \begin{itemize}%
    \setlength{\itemsep}{1pt}%
    }{%
  \end{itemize}%
}

\newenvironment{itemizeM}{%
  \begin{itemize}%
    \setlength{\itemsep}{5pt}%
    }{%
  \end{itemize}%
}

\newenvironment{itemizeL}{%
  \begin{itemize}%
    \setlength{\itemsep}{15pt}%
    }{%
  \end{itemize}%
}


% ------------------------------------------------------------------------
\endinput
% ------------------------------------------------------------------------
